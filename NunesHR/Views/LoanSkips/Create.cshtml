@model NunesHR.LoanSkip

@{
    ViewBag.Title = "Make an Alteration in Loan Payment";
}

<h2>@ViewBag.Title</h2>
<label id="MyShow"></label>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Skip Loan: Monthly Amount is @ViewBag.ToPay.ToString("#,##0.00") </h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("LoanID",(int)ViewBag.LoanID)

        <div class="form-group">
            @Html.LabelFor(model => model.PayDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PayDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PayDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Request.UrlReferrer.AbsoluteUri">Back to List</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(function () {
        $('#MyShow').hide();
        $('#Amount').blur(showoff);
        var topay = @ViewBag.ToPay;

        function showoff() {
            $('#MyShow').show('slow');
            var dife = $('#Amount').val() - topay;

            $('#MyShow').text('The Difference is: Rs. ' + dife.toFixed(2));
            $('#MyShow').html(function () {
                return '<strong>' + $(this).html() + '</strong>';
            })
        }
    })
</script>