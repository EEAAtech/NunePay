@model IList<NunesHR.Payroll>

@{
    ViewBag.Title = "Payroll Instructions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Payroll Instructions (Use <u>before</u> freezing payroll)</h1>


@using (Html.BeginForm("Instructions", "Payrolls", FormMethod.Get))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Choose Period</h4>
        <hr />
        
        <div class="form-group">
            @Html.Label("Choose Month", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("mon", (IEnumerable<SelectListItem>)ViewBag.MonthBox, htmlAttributes: new { @class = "form-control col-md-2" })                
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Choose Year", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("yr", (IEnumerable<SelectListItem>)ViewBag.YearBox, htmlAttributes: new { @class = "form-control col-md-2" })                
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Find by First-name or Nickname:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control col-md-2" })
            </div>
        </div>
         

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@ViewBag.Title" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@using (Html.BeginForm("Instructions", "Payrolls", FormMethod.Post))
{
    @Html.AntiForgeryToken()
<table class="table">
    <thead>
        <tr>
            <th>
                Employee Name
            </th>
            <th>
                Employee ID
            </th>
            <th>
                Instruction
            </th>
            <th>
                Exclude from Excel?
            </th>
            
        </tr>
    </thead>
    <tbody>
@if (Model != null && Model.Count() > 0)
{
    int j = 0;

        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Employees.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmpID)
                </td>
                <td>
                    @Html.TextAreaFor(a => a[j].Instructions)
                </td>
                <td>
                    @Html.EditorFor(a => a[j].ExcludeExcel)
                </td>
                @Html.HiddenFor(a => a[j].EmpID)
                @Html.HiddenFor(a => a[j].GenMonth)
                @Html.HiddenFor(a => a[j].GenYear)
            </tr>
            j++;
        }
}
    </tbody>
</table>
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Save" class="btn btn-default" />
    </div>
</div>
}
<p>&nbsp;</p>
<h3>Existing Adjustments for this month</h3>
<div class="MastDet">
    <table class="table">
        <thead>
            <tr>
                <th>
                    Employee Name
                </th>
                <th>
                    Employee ID
                </th>
                <th>
                    Instructions
                </th>
                <th>
                    Exclude From Excel
                </th>

            </tr>
        </thead>

        @{ 
            IEnumerable<Payroll> Adjs = (IEnumerable<Payroll>)ViewBag.Adjs;
        }
        <tbody>
            @foreach (var item in Adjs)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Employees.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Employees.EmpID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Instructions)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExcludeExcel)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>